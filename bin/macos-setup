#!/usr/bin/env ruby
class MacSetup

  MAIN_HELP_BANNER = <<HEREDOC
Commands to setup host machine

Usage:
  macos-setup [options] [COMMAND] [ARGS...]"
  macos-setup -h|--help

Options:
  --verbose                 Show more output
  -v, --version             Print version and exit

Commands:
  bootstrap           Bootstrap dependencies
  update              Build or rebuild services

HEREDOC

  def initialize(args)
    if args.empty? || (args[0] == "help" || args[0] == "-h") && args.length == 1
      help(args)
      return
    end

    if not respond_to? args[0]
      help(args)
      return
    end

    send(args.shift.to_sym, args)
  end

  def help(args)
    puts MAIN_HELP_BANNER
  end

  def bootstrap(args)
    bootstrap = <<HEREDOC
## Install or Update Homebrew
echo 'Installing or Updating Homebrew...'

which -s brew
if [[ $? != 0 ]] ; then
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
    brew update
fi
echo "\n\n"
## Install or Update Ansible
echo 'Installing or Updating Ansible...'
which -s ansible-playbook
if [[ $? != 0 ]] ; then
    brew install ansible
else
  echo 'Nothing to update'
fi
echo "\n\n"

## Set ansible vault password
echo 'Please set Ansible vault password in "ansible_vault_secret"'
touch ansible_vault_secret

echo "\n\n"

HEREDOC

    system(bootstrap)
  end

  def update(args)
    requirements = File.expand_path(File.join(__dir__, '..', 'requirements.yml'))
    playbook = File.expand_path(File.join(__dir__, '..', 'macos-setup-playbook.yml'))
    inventory = File.expand_path(File.join(__dir__, '..', 'inventory'))

    system "git pull origin master"
    system "ansible-galaxy install -r #{requirements}"
    system "ansible-playbook #{playbook} -i #{inventory} -K --vault-password-file ./ansible_vault_secret"
  end

  def ci(args)
    requirements = File.expand_path(File.join(__dir__, '..', 'requirements.yml'))
    playbook = File.expand_path(File.join(__dir__, '..', 'ci-playbook.yml'))
    inventory = File.expand_path(File.join(__dir__, '..', 'inventory'))

    system "ansible-galaxy install -r #{requirements}"
    system "ansible-playbook #{playbook} -i #{inventory} --syntax-check"
    system "ansible-playbook #{playbook} -i #{inventory} -vvv -K --vault-password-file ./ansible_vault_secret"
  end
end

MacSetup.new(ARGV) if __FILE__==$0
